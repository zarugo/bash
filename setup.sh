#!/bin/bash
#set -x
##########################variables###################################################
HEIGHT=18
CHOICE_HEIGHT=10
WIDTH=50
######################################################################################
#First version with ifconfig - deprecated
#HWADDR=`ifconfig eth0 | grep HW | awk ' BEGIN { FS = " " } ; { print $5 } ; '`
#IPADDR=`ifconfig eth0 | grep "inet addr:" | awk $'{print $2}' | cut -d ":" -f 2`
IPADDR=$(ip addr show dev eth0 | grep -E '(inet )' | awk '{print $2}' | cut -d "/" -f 1)
HWADDR=$(ip link show dev eth0 | grep ether | awk '{print $2}')
MASK=$(ip addr show dev eth0 | grep -E '(inet )' | awk '{print $2}' | cut -d "/" -f 2)
GW=$(ip route list | grep default | awk '{print $3}' | head -n 1)
octet="(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])"
ip4="^$octet\\.$octet\\.$octet\\.$octet$"
ip4_set="$octet\\.$octet\\.$octet\\.$octet"
dns_file="/etc/resolv.conf"
ip_set_file="/etc/dhcpcd.conf"
######################################################################################
#variable for whiptail menu
######################################################################################
OPTIONS=(
Network/IP   "IP Settings           "
Timezone     "Set Time Zone         "
Config       "Edit configuration"
Reboot       "Reboot the System     "
Shell        "Exit to Shell         "
)
######################################################################################
#we need those when using dhcpcd.conf because the netmask is not in octecs but in cdr
#copied from pfsense, they transform snmasks in cdr and return
######################################################################################
cdr2mask()
{
set -- $((5 - ($1 / 8) )) 255 255 255 255 $(( (255 << (8 - ($1 % 8))) & 255 )) 000
[ $1 -gt 1 ] && shift $1 || shift
echo ${1-0}.${2-0}.${3-0}.${4-0}
}

mask2cdr()
{
local x=${1##*255.}
set -- 0^^^128^192^224^240^248^252^254^ $(( (${#1} - ${#x})*2 )) ${x%%.*}
x=${1%%$3*}
echo $(($2 + (${#x}/4) ))
}
#######################################################################################
#show the REAL (not from config file, that could not be applied yet) ip from "ip"
#command. We do not use ifconfig since it's basically deprecated in Linux
#######################################################################################
show_current_info(){
      if (whiptail --backtitle "Network Setup" --title "Current Setting" \
                --yesno "\n\n IP Address:          $IPADDR \n\n Subnet mask:       $(cdr2mask $MASK) \n\n Default gateway:    $GW\n\n\n Do you want to change the network settings?" \
                --defaultno  $HEIGHT $WIDTH 3>&1 1>&2 2>&3)
        then
	   ip_sub_menu
       fi

}
#######################################################################################
#we use sed with regex to find and change values
#######################################################################################
set_ip(){
sed -i -r "s:^static ip_address=$ip4_set\/[1-9]{1,2}:static ip_address=$ipaddr/$(mask2cdr $netmask):g" $ip_set_file
sed -i -r "s:^static routers=$ip4_set\b:static routers=$gateway:g" $ip_set_file
sed -i -r "s:^static domain_name_servers=$ip4_set\b:static domain_name_servers=$dns1:g" $ip_set_file

#echo "# Generated by resolvconf" > $dns_file
#echo "nameserver $1" >> $dns_file

}
#######################################################################################
#network ip collection from the user
#######################################################################################
ip_sub_menu(){
while [ -z $result ] || [ $result == "1" ];
     do

        while [[ -z $ip_result ]] || [[ "$ip_result" == "1" ]] ; do
            ipaddr=$(whiptail --backtitle "Network Setup" --nocancel --inputbox "IP Address" $HEIGHT $WIDTH  3>&1 1>&2 2>&3)
            if ! [[ $ipaddr =~ $ip4 ]]; then
                whiptail --msgbox "Invalid IP!" 10 60
                ! true
            fi
            ip_result=$?
        done
        while [[ -z $sm_result ]] || [[ "$sm_result" == "1" ]] ; do
            netmask=$(whiptail --backtitle "Network Setup" --nocancel --inputbox "Subnet Mask" $HEIGHT $WIDTH  3>&1 1>&2 2>&3)
            if ! [[ $netmask =~ $ip4 ]]; then
                whiptail --msgbox "Invalid Netmask!" 10 60
                ! true
            fi
            sm_result=$?
        done
        while [[ -z $gw_result ]] || [[ "$gw_result" == "1" ]] ; do
            gateway=$(whiptail --backtitle "Network Setup" --nocancel --inputbox "Default Gateway" $HEIGHT $WIDTH  3>&1 1>&2 2>&3)
            if ! [[ $gateway =~ $ip4 ]]; then
                whiptail --msgbox "Invalid Default Gateway!" 10 60
                ! true
            fi
            gw_result=$?
        done
        while [[ -z $dns_result ]] || [[ "$dns_result" == "1" ]] ; do
            dns1=$(whiptail --backtitle "Network Setup" --nocancel --inputbox "Primary DNS" $HEIGHT $WIDTH  3>&1 1>&2 2>&3)
            if ! [[ $dns1 =~ $ip4 ]]; then
                whiptail --msgbox "Invalid DNS!" 10 60
                ! true
            fi
            dns_result=$?
        done
        whiptail --backtitle "Network Setup" --title "Are the settings correct?" --yesno "\n IP Adress: $ipaddr \n Netmask: $netmask \n Gateway: $gateway \n DNS: $dns1 \n" $HEIGHT $WIDTH 3>&1 1>&2 2>&3
	result=$?
#reset the loops in case we want to go back and assign a different network config in the same session
	ip_result="1"
    sm_result="1"
    gw_result="1"
    dns_result="1"
    done
	result="1"
    set_ip
    #Check if the file is written, usually fails for missing root permission
	if ! [[ $? = "0" ]]
	then
		whiptail --backtitle "Network Setup" --title "ERROR!" --msgbox "Settings are NOT written to /etc/network/interfaces and/etc/resolv.conf, be sure that you are root!" $HEIGHT $WIDTH
	else
		whiptail --backtitle "Network Setup" --title "OK!" --msgbox "New settings are written to config file, please reboot to apply" $HEIGHT $WIDTH

    fi

}

#######################################################################################
#Main menu
#######################################################################################
while true
do
CHOICE=$(whiptail --nocancel --clear \
    --backtitle "Setup" \
    --title "Setup" \
    --menu "Tasks: " \
    $HEIGHT $WIDTH $CHOICE_HEIGHT \
    "${OPTIONS[@]}" \
    2>&1 >/dev/tty)

clear
case $CHOICE in
    Network/IP)
        show_current_info
        ;;
    Timezone)
        sudo dpkg-reconfigure tzdata
        #this was to skip the menu on login if the tz is set, but it's better to go
		#inside it anyway
		touch /home/hubparking/.firsttime
	;;
	Config)
	     nano /opt/HUB/jbl/jbl-conf.json
	;;
    Reboot)
        sudo systemctl reboot
    ;;
    Shell)
        exit
    ;;
esac
done
